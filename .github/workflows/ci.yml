name: CI

on:
  push:
    branches: [ "test_ci"]
  pull_request:
    branches: [ "test_ci"]

# env:
#   CMAKE_FLAGS: -DLCM_ENABLE_EXAMPLES=OFF -DLCM_ENABLE_TESTS=OFF

jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.9"]
        os: [ubuntu-24.04]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -el {0} # Avoid `conda init` and `conda activate`

    steps:
    - uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Verify Java installation
      run: javac -version

    # - name: Install LCM
    #   run: |
    #     sudo apt update
    #     sudo apt install libglib2.0-dev
    #     # Install LCM from source
    #     git clone https://github.com/lcm-proj/lcm.git
    #     cd lcm
    #     cmake -B build ${{env.CMAKE_FLAGS}}
    #     cmake --build build
    #     sudo cmake --install build
    #     cd ..

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-version: latest
        activate-environment: arcpy
        environment-file: environment.yml
        auto-activate-base: false

    - name: Generate LCM types
      run: bash gen_lcm_types.sh

    - name: Install package
      run: |
        # Install the package in editable mode
        pip install -e . --no-deps --config-settings editable_mode=compat

    - name: Install testing and linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Check syntax errors
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run unit tests
      run: |
        pytest tests/ -v --tb=short --disable-warnings
